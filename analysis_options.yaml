# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Disable some rules that are not critical for this project
    avoid_print: false  # We'll use a custom logger instead
    avoid_web_libraries_in_flutter: false  # We have web stubs
    unused_field: false  # Some fields are for future features
    unused_element: false  # Some methods/elements are for future use
    unused_local_variable: false  # Some variables are for debugging
    dead_code: false  # Some code is for future features
    # Enable some helpful rules
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    prefer_const_declarations: true
    use_build_context_synchronously: false  # We handle this carefully
    unnecessary_brace_in_string_interps: true
    prefer_interpolation_to_compose_strings: true
    unnecessary_this: true
    curly_braces_in_flow_control_structures: true

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
