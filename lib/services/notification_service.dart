import 'dart:async';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:audioplayers/audioplayers.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';

import '../models/call_model.dart';
import '../screens/incoming_call_screen.dart';

class NotificationService {
  static final NotificationService _instance = NotificationService._internal();
  factory NotificationService() => _instance;
  NotificationService._internal();

  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final FirebaseMessaging _firebaseMessaging = FirebaseMessaging.instance;

  // Audio player for ringtone
  final AudioPlayer _audioPlayer = AudioPlayer();
  bool _isRingtonePlaying = false;
  String? _activeCallId;

  // Local notifications plugin
  final FlutterLocalNotificationsPlugin _flutterLocalNotificationsPlugin =
      FlutterLocalNotificationsPlugin();

  // Global navigator key to access context from anywhere
  GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

  // Set the navigator key (useful for sharing the same key across the app)
  void setNavigatorKey(GlobalKey<NavigatorState> key) {
    navigatorKey = key;
    debugPrint('NotificationService: Using shared navigator key');
  }

  Future<void> initialize() async {
    // Request notification permissions
    await _requestNotificationPermissions();

    // Initialize local notifications
    await _initializeLocalNotifications();

    // Setup Firebase Messaging
    FirebaseMessaging.onMessage.listen((RemoteMessage message) {
      debugPrint('Got a message whilst in the foreground!');
      debugPrint('Message data: ${message.data}');

      if (message.notification != null) {
        debugPrint(
            'Message also contained a notification: ${message.notification}');

        if (message.data['type'] == 'call') {
          // Handle incoming call
          final String callId = message.data['callId'] ?? '';
          final String callerId = message.data['callerId'] ?? '';
          final String callerName = message.data['callerName'] ?? 'Unknown';
          final String callType = message.data['callType'] ?? 'audio';

          // Create a CallModel from the message data
          final CallModel call = CallModel(
            id: callId,
            callerId: callerId,
            callerName: callerName,
            callerPhotoUrl: message.data['callerPhotoUrl'] ?? '',
            receiverId: _auth.currentUser?.uid ?? '',
            receiverName: message.data['receiverName'] ?? '',
            receiverPhotoUrl: message.data['receiverPhotoUrl'] ?? '',
            channelId: message.data['channelId'] ?? '',
            token: message.data['token'] ?? '',
            type: callType == 'video' ? CallType.video : CallType.audio,
            status: CallStatus.ringing,
            createdAt: DateTime.now(),
            numericUid: int.tryParse(message.data['numericUid'] ?? '0') ?? 0,
            participants: [callerId, _auth.currentUser?.uid ?? ''],
          );

          showIncomingCallNotification(call);
        }
      }
    });

    // Handle background messages
    FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

    // Handle notifications opened app from terminated state
    FirebaseMessaging.instance
        .getInitialMessage()
        .then((RemoteMessage? message) {
      if (message != null && message.data['type'] == 'call') {
        _handleCallNotification(message);
      }
    });

    // Handle notification when app is in background but opened
    FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {
      if (message.data['type'] == 'call') {
        _handleCallNotification(message);
      }
    });

    // Listen for incoming calls from Firestore even when app is in background
    _setupBackgroundCallListener();
  }

  Future<void> _initializeLocalNotifications() async {
    debugPrint('Initializing local notifications');

    // Initialize settings for Android
    const AndroidInitializationSettings initializationSettingsAndroid =
        AndroidInitializationSettings('@mipmap/ic_launcher');

    // Initialize settings for iOS
    const DarwinInitializationSettings initializationSettingsIOS =
        DarwinInitializationSettings(
      requestAlertPermission: true,
      requestBadgePermission: true,
      requestSoundPermission: true,
    );

    // Initialize settings for all platforms
    const InitializationSettings initializationSettings =
        InitializationSettings(
      android: initializationSettingsAndroid,
      iOS: initializationSettingsIOS,
    );

    // Initialize the plugin
    await _flutterLocalNotificationsPlugin.initialize(
      initializationSettings,
      onDidReceiveNotificationResponse: _onNotificationTapped,
    );

    debugPrint('Local notifications initialized successfully');
  }

  void _onNotificationTapped(NotificationResponse response) {
    debugPrint('Notification tapped: ${response.payload}');

    // Parse the payload to get call information
    if (response.payload != null) {
      try {
        final callId = response.payload!;

        // Fetch call details from Firestore
        _firestore.collection('calls').doc(callId).get().then((doc) {
          if (doc.exists) {
            final CallModel call = CallModel.fromFirestore(doc);

            // Only show incoming call if it's still ringing
            if (call.status == CallStatus.ringing ||
                call.status == CallStatus.dialing) {
              showIncomingCallScreen(call);
            }
          }
        });
      } catch (e) {
        debugPrint('Error handling notification tap: $e');
      }
    }
  }

  // Setup background call listener
  void _setupBackgroundCallListener() {
    final currentUser = _auth.currentUser;
    if (currentUser == null) return;

    debugPrint(
        'Setting up background call listener for user: ${currentUser.uid}');

    // Listen to the user's calls subcollection for incoming calls
    _firestore
        .collection('users')
        .doc(currentUser.uid)
        .collection('calls')
        .where('status', isEqualTo: 'ringing')
        .snapshots()
        .listen((snapshot) {
      debugPrint(
          'Background listener received call snapshot: ${snapshot.docs.length} documents');

      if (snapshot.docs.isNotEmpty) {
        final callDoc = snapshot.docs.first;
        final call = CallModel.fromFirestore(callDoc);

        // Show notification for incoming call
        _showIncomingCallLocalNotification(call);

        // Also try to show the call screen directly if possible
        showIncomingCallNotification(call);
      }
    }, onError: (error) {
      debugPrint('Error in background call listener: $error');
    });
  }

  // Handle call notification
  void _handleCallNotification(RemoteMessage message) {
    final String callId = message.data['callId'] ?? '';
    debugPrint('Handling call notification for call ID: $callId');

    // Fetch call details from Firestore
    _firestore.collection('calls').doc(callId).get().then((doc) {
      if (doc.exists) {
        final CallModel call = CallModel.fromFirestore(doc);
        debugPrint('Found call document with status: ${call.status}');

        // Only show incoming call if it's still ringing
        if (call.status == CallStatus.ringing ||
            call.status == CallStatus.dialing) {
          showIncomingCallScreen(call);
        } else {
          debugPrint(
              'Call is no longer ringing (status: ${call.status}), not showing UI');
        }
      } else {
        debugPrint(
            'Call âPNG

   IHDR   H   H   UÌ≥G   sRGB ÆŒÈ   DeXIfMM *    ái            †       †       H†       H    ê1FÔ  jIDATxÌ[kå]’u^Áﬁ;sÁﬁyx¸öÒsåÌ1∆<Ïÿ¶ÖåÑ#îîQï“Ñ"54†Ü"5•≠R˙i˚By4M#UI

MïFƒ"	äR3Ä∆ÿégÏÒÿ&~ég<sgÓÎÙ˚÷ﬁÎÃæ/◊–˛∞´Yˆ9kÌµ◊Z{≠µgü}œàÃ√|Ê30üÅ˘Ãg`>Ûòœ¿|Ê30üÅˇÛDócÒwæﬂπùîX.Kß©›H&cëüñ+Úıäfö | f«Ì≥≥rM%#ÉQæE≤6ÆJ!#ÚÕl6z˜òj)z…`˛J‹Á‰üu≈˜-Í…§´íÚ¥åIOã¬’8í©BJNûó7£X>ÒÂOEßç‘rêÑl±(Î ióòﬁPEG¬ˆ §”
±o»7]™FÚÒÓ∂hW≠µ^¢Ωñôåˇj”@¸G3ÖÛR©î‰˙ÂYY⁄ïFÏ±LÕ∆R(ãä±L—m¿Öhãöåß0 ^ôtJñ-î∑F‚üˆ-èÓxÍŒ®å$‰/"	)ûíƒH`AØÇ™¯$√2
!_yU˘IgG¥√Wh‘:Aq=˝)TKß≥≈REÓ∏6/}=ÊÁú;sΩ«πáD¿L!ó8&åâ√≈§•SiÈ»D“Ÿëñ•ΩYÈ…F«ó/–ƒ≠ÄMŸ¿”B›®híçy%%ASGâÛmíè¢Hª´Q˘Ú8òÆÕ··o…∫ÆÖÏ……ä6ÿ◊ùÚ	∞Eà…¿?L,¬¸k«’ïçd)í…—íIìóí4£Œ≥9®ï∆cÄº@≠IbÄ x†¶jí$ TG§}fFV£xÑº-¥,WπnffVŒ™≤v1ƒ–-ò
íB⁄2ú… ˆIh#O˝ı3ökpí<Ωi•s€î$ŒèÄ$!¶Kæ—¶ûÿ£Y¨dSËÆ-‘ûñ¸l9ñﬁ|JÓ‹‘-+∂ìê∂$†IuÿÁ#q"	ò2&¨§	¡⁄àbïÇóUQ–¶b™™mS"”h_˜Ú^yÒ”ﬂàœ™Mw;¥â~Ò´Do¸ñd`≤VÊ/ˇ£|{zÚ€‹“-=πtRô8õpDfK"«–ÙÈI0G-9¶£ç·f|ö∞∫¿\S^XπÙ±Û±å =t…‹™‚8^à‚RQæŸqA~Ôπ«¢âKŸk9ÇK€u+€kíCCaØë~Û®»øΩ≈ßìH.+…6@eõµLOˇ¡‘±>‚π¢„€ƒr(ã;%öLÀÿq‹˜?ƒ˜|ı¡÷€Åñ	;ÚÛ%õ∏∆Õı∏Æ~∞—˜ﬁ˘˛ë≠Î]b™Ùß¥+&¥’Éù»PV’ºû—*»±l˙&£∫‘Ûrâ-+{¨>Q£áÄ=í,¡”≥'/˘„ßÂ?±ﬁ¸˜üäˆª⁄⁄{”fœù:⁄?>Ω≤FöòíØ 9õVπ`kúıı@3]‚∞¨ASæ_e€”´Ö‹eÎ√Ûƒe·¸î`mïL±,_Î.\–4AÂÆÆçú∆ãÅ¶ﬁ˘Ã–—Yl˜∏`YJ (a	5æyaı,'˙^Oy>14`≤¥k`<ñ}ﬂ∂˘§Ú‘˜∂¥ÏçPk‘ ≈≤√l÷„¶	Í©VK¯ó>5Å4hàA&Ä¬x¡≠9⁄√æÇr›9'?=ãùí®A†^1ÍÒøÜ÷‡ŸûÔ('cºzù–˝“‰x€Í®%÷€§>ÅÎd˛Œai6>÷)¨ûÕ¡∂∆5µ{˜nú)«≈ÙŸã¡b/x'à›ÎDm∞\£nŸºFÁ∑sÄ ‘o√qú.+hè†ˆy(€®∞∫Mπ}Úæµ± Ôìø¥≈]ÿ±Ãµ„;à6Î°iÇD˛π«È∏å’l|è3Ä9Qo¿¯Ωx§DﬂW0p^1«T´ôƒ¿È§Ú‘Ix†>yZÎÎ|ô<ı¡cä05˙d∂Ä	bõúµòJu	“∆ÿ∏wÄ2∆Sö7@0huí	0=2<üï°-Mxı◊ËR«Î_‚¶˙≥NÌyMéc'˛†ÿöÆAîNß⁄¥≠ã≥5DAg©s˙»˜ç™û¶\ˆh•LòÍ≤"–e/Wﬂ@]◊∫÷,a°MméÌm:È∆{À·ΩKmŒ‡¯"ñ,8ÚCöìÒNx»õ¬"Ì, {9 Î»0ì>≠ßåóSõ§uœÒ¡∫<}ÍÚÚÌ®=–ßEå8æ⁄⁄ßÌf–2A©TFÕóxv∞∆t‰xKæ}uFe–ËiWiâ†åÈöº ¢†Â†«-êö˙ˇI?¨ßMﬂà⁄¢!ÄÒ¶qÜyd‘ïõ’;È⁄{À•”f÷∑ËıÆwFÀ§GÍì£uæﬁ‰BL”V&›L_e dr	&∞≤“(òüjK%Êx¨3yìÛ"®eÇ |“8ÏΩîmr&É„!Ö§Ïäéá;˘‘!$∫§=ìÔJ˝qTÅÅ{Ê∂n+ÊÙºn®üÿ	ß#ô mÀÕ¢˙Ëm©‡%n≠E’Jä”©´-írπ*ú˝ÿ˘IÉl»7Üìπm ê{C˘4$pæ≥'Ch%æ˛∆u"ù~37∞L‰‡1ë≥„Åæó´—á}3ü¯≈v=ìòÚãâlπ	4Ív˝ı∂ë5Â–AOª®Î*.÷NVæ#¬a0èK›(“}rÍT‘√˙$ÑŒRû~X`˙`¥∑°CÚs5,ﬂÄÑ];Äëå]0ıı
"ü÷æ˙	æ Ço‚ƒLéñçâ≤Èì¨á¶	BÆuÎ›ç;+ïh÷C`ò$ÎÈX‚úK ®”DyYV´û/á˙ú^,<R¢±»Õô∫ºÆŸ¨√‘≥mA´ˆi◊¢Qø»‡’ö&(ï*ÎZ–éÛÙN1Hê`ˆh€w`“éµgN&ê5ß˚r¢ÔM?l+è6oYá”ûÒX]"Îm%~$ÌìÈ¡ícu¶oıı∏˘îkØAn≥»d%Î,’ãñÿÿæÇò-∫¶Õ)WËÉaáu§i3ºVˆâÙ‚aˇ∞»ƒEoÉ22Õh⁄¿ªú¡6ÑI¢˝QYî[AÛUÀö†Æ˛íQï÷ Ç9Pcå-{‡ﬁ{ﬂ8Ÿ¨÷ÀÀôÛı…RY»x1TîCå´£/≈◊·AÄÛ®qtàÅÍz°µÅ€$∫˜m¥∫Y˚f'ƒMß^T›¬"…uØÓñ–5lÜç[Pl–‰åV¶ÒMﬂ¯ƒÆ[H99+söıc4ô?¶O{Fk˚d Ö4y(€•BMnÕGP\—uÍJ‰¨†5˛∆≈ıˇk¿∑[”˚	—$4ÚöÍò—Ü√zœ´ò $ì$°¿SA:ìºíÑ˙∆e…2öl“I˚ı¡∞>Ä	r#(ﬂÜ	±ËpÒï#ù ®ì™œF@Ñ=¿∂∂·|öpé41§5õﬁ°0òê¶Ç" zZÀL KåÚP?â„“—1ﬂ>ï™Á;Di/¨4Í{zE÷™®Ï¬”˚ ÇµÔJµ˜¶	¬∫£cßµ¸Âíoc|‘wÄ[üp3Œû‚F·Íht’1‹(c4õ∑≤—ƒ⁄”x§<“LNÇQ8r?3°‘é∂«ª&û<\%Ìq/’√cbV{=≈ıA°ﬁ†IÇÓOW¢—L.õ…¥£∂Ã,√X±Ó•µﬁÅ∞L„t8qÇ&Ë0/£âÌÚù'pj±L0ææç„≠úO/œWÏUŒW0·û≠ÑµO˚º¨N}¥¯ı–ê†€á≥2ìëæ˘nµ¬Ï¬@#Hçôœ7€ä≠`2¿∂‘Îö√¶B“fBÉA≈ÿI7rt§†ÌDﬂ+±úÎó•+ÜeQﬂ®t‰'•#áyò)tJa™[¶&∞#_'’JØÍ'£ŒkÇî)ÚÁø~±h«`t”Üçó>FPxS¬9™|ñ·∏Ω\rg@=´S7Úú•π:⁄"øÄ}äÓ(ò TSéGÔ{”ß Äz›O…‡çØI◊¢aÏç∆ebz\ŒúõÖœX≈a´-›Ü◊|M“ﬂ+ŸŒ^i/Øìﬁ≈∑…ôS}5'üŒbÌΩ!AÈ∏§ÎOo'FpsX¬'00h-Sƒ;À—ÚÍ>WKû≤âI¯≤ÚºéÈèo√X[÷‚cÚé„mdÃ}NS/Ît™rÌ÷Kﬂ¿ÎÚã≥crt¯,¥ò÷¿Iî X'
≥π0âﬂ«±?X‹3&∑Ïñ±√7À[ˇµç5›Ì@øÑË=∏E17âYêœtÛÈ•ØÙpß¯»∂˚∫É‚◊<ùN,ìˆ√ƒ¶òÍx%ìØ«î√Øµ'ê“LX®o4ÎÈ∂YπÒ÷ÔIî{[ˆ>Ñˆ¯(π4ËπZñ”„ß‰ÏƒYπf≈Eπ˝ÆsÚãwÔn©ÿò∫jF˜@πéLè˚ äQ·ÁxWÙ”å÷◊ŸU⁄3:ê1YbIÃõbìÛ">òúözÍ 4I8£brJÈ›rht?dÀË$◊ÅÜŸôUœS∫£§âK¯zÅ∫q€nπÊ#ﬂì]ÒSÉÖÌ5$(∑IÃµe¿Ê`u/¨úgex˚–ã§5``≤πª›∏“]<”1YìÛö*lzÜÕ,eıÇpàUŒÿ∞Â«"Ÿ=2r¸∞[¡¬≈´ä°eÿ—LyΩò4M∞%»â√Rn€#e—3â—ê lóuM+Ï^iˇ˙Ãuà”õé7Äl`)æ¨ƒ+@V(¶A*¡BPÆ7Ä:&Å‡ë√^«√y—ÇS≤dıÎË˝ÉX–›ìïòWïâÚò¥é&èI;yáUŒÎ:z ó‚£/«œnwÃ›T≠‚CB¿èﬁ€=ãO¥`ú#Iüdtÿq≠ %¡Û¨.	÷H~¬3Y´Ûòlì	±&Ÿ◊ﬁÙöåûA@≥ö éÎ»˙Ë»bò8\6¬(èO¡í#GOé`O˝çw-A	¬Ô©∫y8qvj‚;S24À1yûô¬«ò¡odfÅÅ,Wrw¯Ê x®ÑÅ≥2—7:LVù~æ˚º‰ñ˜œú¿a–òBá4yÕ/∑ñﬁªÍ”Ú‡⁄œkít™Aû6gã≥;ˇ=~˛ZÁ¥ª7,L”πÍHn6ÉØgæÉ3ùWG‹ﬁd_ke3eyˆ¡X⁄Ò“ Ñ0XbÇb£ïÅõüé¨≥À™àøÈi=ô‘·˙F`|‚%ÀF‰Ã¯iÌy≠d‚)tÄÚÌfuf¬˜≠˘å‹∫‰„R™eYvçù:ugà∂Wˆ≠˛u®'#©aùöÓÕw/[±ÊXˆÌi$iLÉ∆Á–Ú/?√ØoÄö∑lÔ:T^≈y/=∞'óIÃ"1†ŸÒı@ì3Zôaˇ®ú>*:mtŸ4‚bÏFñé(ø@sjqZ˝∆öﬂï_È˚Ñ&ÁÎˇBF&ﬂS~[^gŒÛGΩ¯.kó∏aë944TzÈuo\(ï§“â«58úï#Ÿ=Víﬂüî˛E9…„m÷’˘Ä°Àœ^Íßm29ö(éµÎÍHàõÈ≥éØ”«ßu-1YnbsÈ.ô©<ﬂ¢Äoï„„˛uè»G˚~UìÛµ˜˛\\xK7¿úb¥Aòö÷’e¿ï‹Ωa%ï•∂wsY¸ÌÄMÊ€Ò˚Üo˚¯Öäú∫àÖCus≠v∂úí∞K”ﬁºö0⁄tXŒvL·√ÙÇ%n—Õ•∫‰≥7<-~~‡Ç£Ü£*Yáb˘Õµè»m˝.9_Ÿˇg≤ˇ¸~Ìrkï-‚”ÿm¯Q{-Ùÿ›—,v”Ø8IL5L±ﬁŒH≤HTG÷˝”8äıÅ˘h¨˜Y‘§Å`ÁXô∂B:	ûL÷èÇ,◊ÎÛÒm0[–∂D∂/ïmKv»oo¯CL]~óÇ)≈˙øµÓQπ}Ÿ›:ræºÔOì‰®$ÿ”tCùÒ∑ñ	b=>¢zh√äŒSÇ\3“ÈŒÑ:d9¶WVèc]îe`tå@îÃ2‰)&Aª@ÑPüeï#aˆ¯VﬁûiGP~£|t‚ê<ª˜Û¯ªë)Ÿ∂Ùyh„ìP¿háøLŒéÂøÜ‰Ã Ô|Aˆù“'üç0ÆSJ„¢m¿IﬁöÆAV˘»GÛ«üˇY|˝÷ı]}a∫Ú1ÿX◊ôKELNO∏ÿ1Y $H6⁄≥í çØò‚û∏,~πˆ9º≠O“¨SFÔ_xWûŸÛ§<æÂã≤I‚Ç<Uöê;V‹£…y~Ôt‰8•÷˜é}y%8ÇØ¯n¸‹#c√_‹s`OSüØÈŸ(∞ıo%óÈ‘˙"FŒs{˛$I;CgÉÔõæñÑÕ7„w∑ıO~2˙lÎ«|”ñØ&ñﬁóñ-]¶#Ñká-ƒ6eÜ«˜ÀﬂΩÒ9ùnLŒ≥o˛±Ï;Ûz≤®s]‚∫ekmêVåÏ-_∫õ«Ë;a∏ñºêwE”ﬂçøÙ Î˚Üvéåç4¯i?0¨ÔΩ£(è‰‡dﬁÜ	§±èFã8◊Å:Xªj≠‹|√ˆ~2zÏca’%◊†PJ°ﬁ7^ø˚Ëâ—®Ã√0ﬁ…CÁﬁQäiÚ„ìSUÏDùDﬂ√&6	ÒﬁDÇ.˘K§Æ ‚ûË˜árŸ‹∑n˛e}ÚÈc:x™ÖO8ûa±LÏhºÿ*èÔpÓ	∆}”-õo¡ﬂô‰^†Ì˙PØ∫1Ä.9˜¯ ˛ïª∂m˙^y‹ZÆG.i‰˚óYˇ*¡?›k1íÜ¥m”VY[¥YüñØ∫5»Çx9~aa,Â=ˆ˛ÿù?zØA˛W@¡Ÿ4#€h‚∂LFnﬂ~õ¨^∂jW$ô˚Óâ≈Åu#\µ	b(<&ÂI‡ÙÃÙ£oÓﬂ˝¸Ëa}¬5Ü9«·B>∏fΩl›¥%Œw‰_‡»π3z™1ª^Â™NêÖÕì@vM¶wéû≈Å⁄~ö∆ãÌLAßQW.'›]›-´e`≈j|‚óˇ!‰fkéŸ4¸ˇ"AÃKÒ3qRx/&è,¯Vn/û¯1I∞Cé~ÄïÈ•{£«Ò·Ã<Ãg`>W@˛ÚO…‚Ó.    IENDÆB`Ç                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                âPNG

   IHDR         ‡w=¯   sRGB ÆŒÈ   DeXIfMM *    ái            †       †       †           ‚5u≠  IDATHc`ÍÄüåç”X_ºª¿¯ˇ¿∆ˇ&åRıˇü1˛g<ÛüëqÉÑêÓÜ≥gg˝∆eNdî-˛˛Ô∂∂6QˆÛqa∞03dêêõÛ‚≈kÜßŒ3l⁄≤á·Ë—3wòKü‹=æó%(‚L2äÊ]∂é°ˇèü8˜ü ©©ÈÈE1§0(,˝ˇáèüôó©ÈÈ≈f&\, ◊êb8Ãê∞O@AãÄ"TF¡‚z∞º~˝ˆxTˆˇ˛âsˇˇ˙ıfV§d»,;§-C√£s04nﬁ≤Áø¥Ç9€;áˇ?qÚ<Üdê ≥`¿#îA© 5√ÖÓ‹}¿ë…PZ—∆ ∏82d»,ò‹P:%EB d·Úïõ\"÷o‹â°d$œ@§‡Ä2,ùcË¬"ÊÕ;Ü‹ÇzÜŒÓÈ(≤3`íÅ…upŒD¡ëˇêÇ$å§ >íˇüÅr(:`d¿ûŸEDÑ&Ohd®,ÀB—ÚÚÂ ˇˇ3ò ‹PŸ ˛Ñ ###CDò/√Å=+˝›1îÉÃ ôìÄ[ *∏@e>†¢¨¿∞f≈tÜûŒj~>¨JAfÄÃ¬êƒï—ûøxı?26ÔˇÑIf4êç4-*`^¢ia≤Ñ⁄≈5ˆ4.jT88- ˘ÜU&»ú° ã™ú±‰Y+    IENDÆB`Ç                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              